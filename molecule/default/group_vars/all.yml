---
backup_settings:
  ## バックアップ処理の指定：無し、バックアップデータの世代管理：無し
  test_command_undefined:
    user: command_undefined
    cron:
      hour: 1
      minute: 23
  ## バックアップ処理の指定：有り、バックアップデータの世代管理：無し
  test_command_only:
    user: command_only
    cron:
      hour: 1
      minute: 23
    command: rclone test makefile 1234 ${BACKUP_DATA_DIR}/test.txt
  ## バックアップ処理の指定：無し、バックアップデータの世代管理：有り
  test_restic_only:
    user: restic_only
    cron:
      hour: 1
      minute: 23
    restic:
      target: /home/restic_only/dummy
      repo_password: n0m@l_p@55w0rd
  ## バックアップ処理の指定：無し、バックアップデータの世代管理：有り
  ## 外部ストレージ(rclone経由)を利用した世代管理の指定
  test_restic_only_with_rclone:
    user: restic_only_with_rclone
    cron:
      hour: 1
      minute: 23
    restic:
      repo_type: rclone
      repo: cloudflare_r2:backup/restic_only_with_rclone
      repo_password: 5tr0ng_p@55w0rd
    rclone:
      cloudflare_r2:
        type: s3
        provider: Cloudflare
        access_key_id: "{{ lookup('env', 'CLOUDFLARE_R2_ACCESS_KEY_ID') }}"
        secret_access_key: "{{ lookup('env', 'CLOUDFLARE_R2_SECRET_ACCESS_KEY') }}"
        region: auto
        bucket_acl: private
        endpoint: "{{ lookup('env', 'CLOUDFLARE_R2_ENDPOINT') }}"
  ## バックアップ処理の指定：有り、バックアップデータの世代管理：有り
  test_restic_default:
    user: restic_default
    cron:
      hour: 1
      minute: 23
    command: rclone test makefile 1234 ${BACKUP_DATA_DIR}/test.txt
    restic:
      repo_password: very_5tr0ng_p@55w0rd
  ## バックアップ処理の指定：有り、バックアップデータの世代管理：有り
  ## keepパラメーターの指定による世代数の指定有り
  test_restic_forget_keep_param:
    user: restic_forget_keep_param
    cron:
      hour: 1
      minute: 23
    command: rclone test makefile 1234 ${BACKUP_DATA_DIR}/test.txt
    restic:
      repo_password: very_very_5tr0ng_p@55w0rd
      keep_type: hourly
      keep_value: 6
  ## バックアップ処理の指定：有り、バックアップデータの世代管理：有り
  ## 外部ストレージ(rclone経由)を利用した世代管理の指定
  test_restic_and_rclone:
    user: restic_and_rclone
    cron:
      hour: 1
      minute: 23
    command: rclone test makefile 1234 ${BACKUP_DATA_DIR}/test.txt
    restic:
      repo_type: rclone
      repo: cloudflare_r2:backup/test_restic_and_rclone
      repo_password: very_very_very_5tr0ng_p@55w0rd
    rclone:
      cloudflare_r2:
        type: s3
        provider: Cloudflare
        access_key_id: "{{ lookup('env', 'CLOUDFLARE_R2_ACCESS_KEY_ID') }}"
        secret_access_key: "{{ lookup('env', 'CLOUDFLARE_R2_SECRET_ACCESS_KEY') }}"
        region: auto
        bucket_acl: private
        endpoint: "{{ lookup('env', 'CLOUDFLARE_R2_ENDPOINT') }}"
  ## 実例のサンプル
  wordpress:
    user: wordpress
    cron:
      hour: 2
      minute: 22
    environment:
      DB_HOST: localhost
      DB_NAME: wordpress
      DB_USER: wordpress_db_user
      DB_PASSWORD: wordpress_db_password
    command: |
      rclone test makefiles ${BACKUP_DATA_DIR}
      # NOW_DATETIME=$(date +"%Y%m%d_%H%M%S")
      # wp db export ${BACKUP_DATA_DIR}/dump_${NOW_DATETIME}.sql --path /var/www/wordpress
      # tar vcfz uploads_${NOW_DATETIME}.tar.gz /var/www/wordpress/wp-content/uploads/*
    restic:
      repo_password: very_very_very_very_5tr0ng_p@55w0rd
  redmine:
    user: redmine
    cron:
      hour: 3
      minute: 33
    environment:
      DB_HOST: localhost
      DB_NAME: redmine
      DB_USER: redmine_db_user
      DB_PASSWORD: redmine_db_password
    command: |
      rclone test makefiles ${BACKUP_DATA_DIR}
      # NOW_DATETIME=$(date +"%Y%m%d_%H%M%S")
      # mysqldump -u ${DB_USER} -p${DB_PASSWORD} -h ${DB_HOST} --single-transaction ${DB_NAME} | gzip >dump_${NOW_DATETIME}.sql.gz
      # tar vcfz files__${NOW_DATETIME}.tar.gz /path/to/redmine/files/*
    restic:
      repo_type: rclone
      repo: cloudflare_r2:backup/redmine
      repo_password: very_very_very_very_very_5tr0ng_p@55w0rd
      keep_type: weekly
      keep_value: 2
    rclone:
      cloudflare_r2:
        type: s3
        provider: Cloudflare
        access_key_id: "{{ lookup('env', 'CLOUDFLARE_R2_ACCESS_KEY_ID') }}"
        secret_access_key: "{{ lookup('env', 'CLOUDFLARE_R2_SECRET_ACCESS_KEY') }}"
        region: auto
        bucket_acl: private
        endpoint: "{{ lookup('env', 'CLOUDFLARE_R2_ENDPOINT') }}"
